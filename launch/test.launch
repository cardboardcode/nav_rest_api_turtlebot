<?xml version="1.0"?>
<launch>

    <arg name="show_rviz_gazebo" default="false"/>

    <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/>
    <arg name="x_pos" default="-2.0"/>
    <arg name="y_pos" default="-0.5"/>
    <arg name="z_pos" default="0.0"/>

    <include file="$(find gazebo_ros)/launch/empty_world.launch">
      <arg name="world_name" value="$(find turtlebot3_gazebo)/worlds/turtlebot3_world.world"/>
      <arg name="paused" value="false"/>
      <arg name="use_sim_time" value="true"/>
      <arg name="gui" value="$(arg show_rviz_gazebo)"/>
      <arg name="debug" value="false"/>
      <env name="GAZEBO_MODEL_PATH" value="$(find nav_rest_api_turtlebot)/models" />
    </include>

    <param name="robot_description" command="$(find xacro)/xacro --inorder $(find turtlebot3_description)/urdf/turtlebot3_$(arg model)_for_autorace.urdf.xacro" />

    <node pkg="gazebo_ros" type="spawn_model" name="spawn_urdf"  args="-urdf -model turtlebot3_$(arg model) -x $(arg x_pos) -y $(arg y_pos) -z $(arg z_pos) -param robot_description" />

    <!-- spawn the mini mock charger -->
    <node pkg="gazebo_ros" type="spawn_model" name="spawn_model"
        args="-sdf -database MiniMockCharger -model charger -y 0.5" />

    <arg name="map_file" value="$(find nav_rest_api_turtlebot)/map/map.yaml" />
    <arg name="open_rviz" value="$(arg show_rviz_gazebo)"/>
    <arg name="move_forward_only" default="false"/>


    <!-- Turtlebot3 -->
    <arg name="multi_robot_name" default=""/>
    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
      <param name="publish_frequency" type="double" value="50.0" />
      <param name="tf_prefix" value="$(arg multi_robot_name)"/>
    </node>

    <!-- Map server -->
    <node pkg="map_server" name="map_server" type="map_server" args="$(arg map_file)"/>

    <!-- AMCL -->
    <arg name="scan_topic"     default="scan"/>
    <arg name="initial_pose_x" default="0.0"/>
    <arg name="initial_pose_y" default="0.0"/>
    <arg name="initial_pose_a" default="0.0"/>

    <node pkg="amcl" type="amcl" name="amcl">
      <param name="min_particles"             value="500"/>
      <param name="max_particles"             value="3000"/>
      <param name="kld_err"                   value="0.02"/>
      <param name="update_min_d"              value="0.20"/>
      <param name="update_min_a"              value="0.20"/>
      <param name="resample_interval"         value="1"/>
      <param name="transform_tolerance"       value="0.5"/>
      <param name="recovery_alpha_slow"       value="0.00"/>
      <param name="recovery_alpha_fast"       value="0.00"/>
      <param name="initial_pose_x"            value="$(arg initial_pose_x)"/>
      <param name="initial_pose_y"            value="$(arg initial_pose_y)"/>
      <param name="initial_pose_a"            value="$(arg initial_pose_a)"/>
      <param name="gui_publish_rate"          value="50.0"/>

      <remap from="scan"                      to="$(arg scan_topic)"/>
      <param name="laser_max_range"           value="3.5"/>
      <param name="laser_max_beams"           value="180"/>
      <param name="laser_z_hit"               value="0.5"/>
      <param name="laser_z_short"             value="0.05"/>
      <param name="laser_z_max"               value="0.05"/>
      <param name="laser_z_rand"              value="0.5"/>
      <param name="laser_sigma_hit"           value="0.2"/>
      <param name="laser_lambda_short"        value="0.1"/>
      <param name="laser_likelihood_max_dist" value="2.0"/>
      <param name="laser_model_type"          value="likelihood_field"/>

      <param name="odom_model_type"           value="diff"/>
      <param name="odom_alpha1"               value="0.1"/>
      <param name="odom_alpha2"               value="0.1"/>
      <param name="odom_alpha3"               value="0.1"/>
      <param name="odom_alpha4"               value="0.1"/>
      <param name="odom_frame_id"             value="odom"/>
      <param name="base_frame_id"             value="base_footprint"/>

    </node>

    <!-- move_base -->
    <arg name="odom_topic" default="odom" />
    <arg name="cmd_vel_topic" default="/cmd_vel" />
    <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
    <param name="base_local_planner" value="dwa_local_planner/DWAPlannerROS" />
        <rosparam file="$(find turtlebot3_navigation)/param/costmap_common_params_$(arg model).yaml" command="load" ns="global_costmap" />
        <rosparam file="$(find turtlebot3_navigation)/param/costmap_common_params_$(arg model).yaml" command="load" ns="local_costmap" />
        <rosparam file="$(find turtlebot3_navigation)/param/local_costmap_params.yaml" command="load" />
        <rosparam file="$(find turtlebot3_navigation)/param/global_costmap_params.yaml" command="load" />
        <rosparam file="$(find turtlebot3_navigation)/param/move_base_params.yaml" command="load" />
        <rosparam file="$(find turtlebot3_navigation)/param/dwa_local_planner_params_$(arg model).yaml" command="load" />
        <remap from="cmd_vel" to="$(arg cmd_vel_topic)"/>
        <remap from="odom" to="$(arg odom_topic)"/>
        <param name="DWAPlannerROS/min_vel_x" value="0.0" if="$(arg move_forward_only)" />
    </node>

    <!-- obstacle observer node  -->
    <node type="obstacle_observer"
          name="obstacle_observer" pkg="autodock_core" output="screen">
      <param name="vicinity_radius" value="0.16"/>
      <param name="coverage_percent" value="0.35"/>
      <param name="occupancy_prob" value="70"/>
      <param name="base_link_name" value="base_link"/>
      <remap from="/move_base/global_costmap/local_costmap" to="/move_base/local_costmap/costmap"/>
    </node>

    <!-- launch fiducial detect  -->
    <node pkg="aruco_detect" name="aruco_detect"
          type="aruco_detect" output="log" respawn="false">
      <param name="/use_sim_time" value="true"/>
      <param name="image_transport" value="compressed"/>
      <param name="publish_images" value="true" />
      <param name="dictionary" value="8"/>
      <param name="do_pose_estimation" value="true"/>
      <param name="verbose" value="false"/>
      <param name="fiducial_len_override" value="10: 0.1, 11: 0.1, 20: 0.04"/>
      <remap from="camera/compressed" to="camera/image/compressed"/>
      <remap from="camera_info" to="camera/camera_info"/>
    </node>

    <!-- tf from robot base to camera -->
    <!-- slightly "roll" more than 90 degress as the camera is tilted downwards -->
    <node pkg="tf2_ros" 
        type="static_transform_publisher"
        name="link1_broadcaster"
        args="0.04 0 .16 -1.57 0 -1.67 base_footprint camera_rgb_optical_frame"/>


    <!-- rviz -->
    <group if="$(arg open_rviz)"> 
      <node pkg="rviz" type="rviz" name="rviz" required="true"
            args="-d $(find turtlebot3_navigation)/rviz/turtlebot3_navigation.rviz"/>
    </group>

</launch>
